{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kilroy-face-reddit \ud83d\udd17 kilroy face for Reddit \ud83e\udd16 Installing \ud83d\udd17 Using pip : pip install kilroy-face-reddit Usage \ud83d\udd17 To run the face server, install the package and run the following command: kilroy-face-reddit This will start the face server on port 10002 by default. Then you can communicate with the server, for example by using this package .","title":"Home"},{"location":"#kilroy-face-reddit","text":"kilroy face for Reddit \ud83e\udd16","title":"kilroy-face-reddit"},{"location":"#installing","text":"Using pip : pip install kilroy-face-reddit","title":"Installing"},{"location":"#usage","text":"To run the face server, install the package and run the following command: kilroy-face-reddit This will start the face server on port 10002 by default. Then you can communicate with the server, for example by using this package .","title":"Usage"},{"location":"usage/","text":"Usage \ud83d\udd17 This package provides an interface to a Reddit bot that complies with the kilroy face API. It assumes that you have a dedicated subreddit for your bot to post to. Prerequisites \ud83d\udd17 You need to create a Reddit app and get the following credentials: - client_id - client_secret - refresh_token - user_agent You also need to create a subreddit for your bot to post to and get its name. You need to pass all this info to the server, either as environment variables, command line arguments or entries in a configuration file. For example, you can do this: export KILROY_FACE_REDDIT_FACE__CLIENT_ID = \"Paste your client id here\" export KILROY_FACE_REDDIT_FACE__CLIENT_SECRET = \"Paste your client secret here\" export KILROY_FACE_REDDIT_FACE__REFRESH_TOKEN = \"Paste your refresh token here\" export KILROY_FACE_REDDIT_FACE__USER_AGENT = \"Paste your user agent here\" export KILROY_FACE_REDDIT_FACE__SUBREDDIT = \"Paste your subreddit name here\" Running the server \ud83d\udd17 To run the server, install the package and run the following command: kilroy-face-reddit This will start the face server on port 10002 by default. Then you can communicate with the server, for example by using this package .","title":"Usage"},{"location":"usage/#usage","text":"This package provides an interface to a Reddit bot that complies with the kilroy face API. It assumes that you have a dedicated subreddit for your bot to post to.","title":"Usage"},{"location":"usage/#prerequisites","text":"You need to create a Reddit app and get the following credentials: - client_id - client_secret - refresh_token - user_agent You also need to create a subreddit for your bot to post to and get its name. You need to pass all this info to the server, either as environment variables, command line arguments or entries in a configuration file. For example, you can do this: export KILROY_FACE_REDDIT_FACE__CLIENT_ID = \"Paste your client id here\" export KILROY_FACE_REDDIT_FACE__CLIENT_SECRET = \"Paste your client secret here\" export KILROY_FACE_REDDIT_FACE__REFRESH_TOKEN = \"Paste your refresh token here\" export KILROY_FACE_REDDIT_FACE__USER_AGENT = \"Paste your user agent here\" export KILROY_FACE_REDDIT_FACE__SUBREDDIT = \"Paste your subreddit name here\"","title":"Prerequisites"},{"location":"usage/#running-the-server","text":"To run the server, install the package and run the following command: kilroy-face-reddit This will start the face server on port 10002 by default. Then you can communicate with the server, for example by using this package .","title":"Running the server"},{"location":"features/posters/","text":"Posters \ud83d\udd17 Posters are responsible for posting to Reddit. All implemented posters are described below. BasicPoster \ud83d\udd17 This poster simply uses the Reddit API in most straightforward way possible.","title":"Posters"},{"location":"features/posters/#posters","text":"Posters are responsible for posting to Reddit. All implemented posters are described below.","title":"Posters"},{"location":"features/posters/#basicposter","text":"This poster simply uses the Reddit API in most straightforward way possible.","title":"BasicPoster"},{"location":"features/processors/","text":"Processors \ud83d\udd17 Processors are a way to handle different types of messages. They are able to convert between internal and external representations of messages. There are multiple types of processors available, each supporting a different type of message: TextOnlyProcessor ImageOnlyProcessor TextAndImageProcessor TextOrImageProcessor TextWithOptionalImageProcessor ImageWithOptionalTextProcessor You can set the processor to use in the initial configuration, but you can't change the type of processor at runtime.","title":"Processors"},{"location":"features/processors/#processors","text":"Processors are a way to handle different types of messages. They are able to convert between internal and external representations of messages. There are multiple types of processors available, each supporting a different type of message: TextOnlyProcessor ImageOnlyProcessor TextAndImageProcessor TextOrImageProcessor TextWithOptionalImageProcessor ImageWithOptionalTextProcessor You can set the processor to use in the initial configuration, but you can't change the type of processor at runtime.","title":"Processors"},{"location":"features/restrictions/","text":"Restrictions \ud83d\udd17 Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented restrictions are listed below. ToxicityRestriction \ud83d\udd17 This restriction uses the Detoxify model to calculate the toxicity of a post. Posts with a toxicity above the configured threshold are rejected. You can configure the toxicity threshold.","title":"Restrictions"},{"location":"features/restrictions/#restrictions","text":"Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented restrictions are listed below.","title":"Restrictions"},{"location":"features/restrictions/#toxicityrestriction","text":"This restriction uses the Detoxify model to calculate the toxicity of a post. Posts with a toxicity above the configured threshold are rejected. You can configure the toxicity threshold.","title":"ToxicityRestriction"},{"location":"features/score-modifiers/","text":"Score modifiers \ud83d\udd17 Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented score modifiers are listed below. ToxicityScoreModifier \ud83d\udd17 This score modifier uses the Detoxify model to calculate the toxicity of a post. The toxicity is then used to modify the score of the post, greatly reducing the score of toxic posts. You can configure the toxicity threshold and reduction factor.","title":"Score modifiers"},{"location":"features/score-modifiers/#score-modifiers","text":"Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented score modifiers are listed below.","title":"Score modifiers"},{"location":"features/score-modifiers/#toxicityscoremodifier","text":"This score modifier uses the Detoxify model to calculate the toxicity of a post. The toxicity is then used to modify the score of the post, greatly reducing the score of toxic posts. You can configure the toxicity threshold and reduction factor.","title":"ToxicityScoreModifier"},{"location":"features/scorers/","text":"Scorers \ud83d\udd17 Scorers are a way to evaluate posts. You give them a post, and they return a single number representing the score. All implemented scorers are described below. RelativeScoreScorer \ud83d\udd17 This is probably the simplest scorer imaginable and the only one implemented. It simply retrieves the score of the post and divides it by the number of subscribers of the subreddit it was posted in. So if a post has 10 upvotes and 2 downvotes in a subreddit with 1000 members, it will get a score of 0.008.","title":"Scorers"},{"location":"features/scorers/#scorers","text":"Scorers are a way to evaluate posts. You give them a post, and they return a single number representing the score. All implemented scorers are described below.","title":"Scorers"},{"location":"features/scorers/#relativescorescorer","text":"This is probably the simplest scorer imaginable and the only one implemented. It simply retrieves the score of the post and divides it by the number of subscribers of the subreddit it was posted in. So if a post has 10 upvotes and 2 downvotes in a subreddit with 1000 members, it will get a score of 0.008.","title":"RelativeScoreScorer"},{"location":"features/scrapers/","text":"Scrapers \ud83d\udd17 Scrapers are used to provide a stream of existing posts. They define a source of posts, and a way to retrieve them. All implemented scrapers are described below. FrontpageScraper \ud83d\udd17 This is the only implemented scraper. It simply retrieves the bot's frontpage, and returns the posts on it. You can choose the category of posts to retrieve as they are defined by Reddit (hot, top, etc.).","title":"Scrapers"},{"location":"features/scrapers/#scrapers","text":"Scrapers are used to provide a stream of existing posts. They define a source of posts, and a way to retrieve them. All implemented scrapers are described below.","title":"Scrapers"},{"location":"features/scrapers/#frontpagescraper","text":"This is the only implemented scraper. It simply retrieves the bot's frontpage, and returns the posts on it. You can choose the category of posts to retrieve as they are defined by Reddit (hot, top, etc.).","title":"FrontpageScraper"}]}